substitutions:
  id_prefix: ratgdov2
  friendly_name: "RATGDOv2"
  uart_tx_pin: GPIO5
  uart_rx_pin: GPIO3
  input_obst_pin: GPIO1
  status_door_pin: "6"
  status_obstruction_pin: "12"
  dry_contact_open_pin: "7"
  dry_contact_close_pin: "9"
  dry_contact_light_pin: "18"

web_server:

esphome:
  name: garage-door
  friendly_name: garage-door
  #name_add_mac_suffix: true
  project:
    name: ratgdo.esphome
    version: "2.0"

esp32:
  board: lolin_s2_mini

# I2C
i2c:
  # I2C1 / QWIIC
  - id: i2c_1
    sda: GPIO33
    scl: GPIO35
    scan: False
  # I2C2
  - id: i2c_2
    sda: GPIO37
    scl: GPIO39
    scan: False
    
# UART
uart:
  tx_pin: GPIO34
  rx_pin: GPIO36
  baud_rate: 115200

sensor:
  - platform: bme280_i2c
    i2c_id: i2c_2
    address: 0x76
    update_interval: 10min
    iir_filter: 16x
    temperature:
      name: "Garage Temperature"
      oversampling: 16x
      id: garage_temperature
    pressure:
      name: "Garage Pressure"
      id: garage_pressure
    humidity:
      name: "Garage Humidity"
      id: garage_humidity
  - platform: template
    name: "Garage Absolute Humidity"
    update_interval: 10min
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(garage_temperature).state) /
        (id(garage_temperature).state + 243.5)) * id(garage_humidity).state * mw) /
        ((273.15 + id(garage_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    unit_of_measurement: "g/mÂ³"
    icon: "mdi:water"
#  - platform: internal_temperature
#    name: "Garage Door Controller Temperature"


dashboard_import:
  package_import_url: github://ratgdo/esphome-ratgdo/v2board_esp32_lolin_s2_mini.yaml@main

packages:
  remote_package:
    url: https://github.com/ratgdo/esphome-ratgdo
    files: [base.yaml]
    refresh: 1s

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  platform: esphome
  password: ""

improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Garage-Door Fallback Hotspot"
    password: ""

captive_portal:

logger:

# Use S2 mini onboard LED to signal wifi connectivity
# https://community.home-assistant.io/t/esphome-esp32-wifi-connected-led/184399/9
# binary_sensor:
#   - platform: template
#     name: Wifi Connection
#     id: wifi_connected
#     lambda: return(wifi.connected);
#     on_press:
#       then:
#         - light.turn_on:
#             id: led
#             effect: none
#     on_release:
#       then:
#         - light.turn_on:
#             id: led
#             effect: Pulse

# output:
#   - platform: ledc
#     id: blue_led
#     pin: GPIO15
#     inverted: True

# light:
#   - platform: monochromatic
#     name: Blue LED
#     id: led
#     output: blue_led
#     internal: true
#     effects:
#       - pulse:
